@startuml class diagram
class Vector {
    - x
    - y
    + get_tuple(): tuple[x,y]
    + __add__(other): Vector
    + reflect_horizontal()
    + reflect_vertical()
}
class Game {
    - display
    - screen_size: tuple[x,y]
    - player: Player
    - ball: Ball
    - bricks: BrickList
    + start_game()
    - handle_events()
    - initialize_game()
    - update()
    - draw()
    - loop()
}
class Player {

}
class BrickList {
    - bricks: list[Rectangle]
    + draw()
    + add_brick()
    + remove_brick()
}
class Rectangle {
    - rect: pygame.Rect
}
class Ball {
    - radius: int
    - size: int
}
abstract class DrawableShape {
    + draw()
    + collide()
}
abstract class MovingObject {
    - velocity: Vector
    + update()
}
DrawableShape <|-- Rectangle
Rectangle <|-- Player
MovingObject <|-- Player
MovingObject <|-- Ball
DrawableShape <|-- Ball
Vector *-- MovingObject
Rectangle o-- BrickList
BrickList *-- Game
Player *-- Game
Ball *-- Game

@enduml